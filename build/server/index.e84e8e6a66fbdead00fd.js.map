{"version":3,"file":"0.9ac6bfa0691bba97510f.hot-update.js","sources":["../../src/client/app/app.jsx","../../src/client/app/nav_bar.jsx","../../src/client/app/routes.jsx","../../src/client/modules/connector.js","../../src/client/modules/counter/containers/counter.jsx","../../src/client/modules/counter/index.jsx","../../src/client/modules/post/components/post_comment_form.jsx","../../src/client/modules/post/components/post_form.jsx","../../src/client/modules/post/containers/post_add.jsx","../../src/client/modules/post/containers/post_comments.jsx","../../src/client/modules/post/containers/post_edit.jsx","../../src/client/modules/post/containers/post_list.jsx","../../src/client/modules/post/index.jsx","../../src/client/modules/weather/containers/weather.jsx","../../src/client/modules/weather/index.jsx","../../src/server/middleware/html.jsx","../../src/server/middleware/website.jsx","../../external \"react\""],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Container } from 'reactstrap';\n\nimport NavBar from './nav_bar';\n\nconst footerHeight = '40px';\n\nconst Footer = styled.footer`\n  position: 'absolute',\n  bottom: 0,\n  width: '100%',\n  lineHeight: ${footerHeight},\n  height: ${footerHeight}\n`;\n\nexport default function App({ children }) {\n  return (\n    <div>\n      <NavBar />\n      <Container id=\"content\">\n        {children}\n      </Container>\n      <Footer>\n        <div className=\"text-center\"></div>\n      </Footer>\n    </div>\n  );\n}\n\nApp.propTypes = {\n  children: PropTypes.element,\n};\n\n\n\n// WEBPACK FOOTER //\n// src/client/app/app.jsx","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Navbar, Nav, NavItem } from 'reactstrap';\n\nimport { app as settings } from '../../../package.json';\nimport modules from '../modules';\n\nconst NavBar = () => (\n  <Navbar color=\"faded\" light>\n    <Container>\n      <Row className=\"align-items-center\">\n        <Link to=\"/\" className=\"navbar-brand\">Apollo Starter Kit</Link>\n        <Nav>\n          {modules.navItems}\n        </Nav>\n        {(!settings.persistGraphQL || __DEV__) && <Nav className=\"ml-auto\" navbar>\n          <NavItem>\n            <a href=\"/graphiql\">GraphiQL</a>\n          </NavItem>\n        </Nav>}\n      </Row>\n    </Container>\n  </Navbar>\n);\n\nexport default NavBar;\n\n\n\n// WEBPACK FOOTER //\n// src/client/app/nav_bar.jsx","import React from 'react';\nimport { Switch } from 'react-router-dom';\n\nimport App from './app';\nimport modules from '../modules';\n\nexport default (\n  <App>\n    <Switch>\n      {modules.routes}\n    </Switch>\n  </App>\n);\n\n\n\n// WEBPACK FOOTER //\n// src/client/app/routes.jsx","import React from 'react';\n\nimport { merge, map, union, without, castArray } from 'lodash';\n\nconst combine = (features, extractor) =>\n  without(union(...map(features, res => castArray(extractor(res)))), undefined);\n\nexport default class {\n  // eslint-disable-next-line no-unused-vars\n  constructor({route, navItem, reducer}, ...features) {\n    this.route = combine(arguments, arg => arg.route);\n    this.navItem = combine(arguments, arg => arg.navItem);\n    this.reducer = combine(arguments, arg => arg.reducer);\n  }\n\n  get routes() {\n    return this.route.map((component, idx) =>\n      React.cloneElement(component, { key: idx + this.route.length })\n    );\n  }\n\n  get navItems() {\n    return this.navItem.map((component, idx) =>\n      React.cloneElement(component, { key: idx + this.navItem.length })\n    );\n  }\n\n  get reducers() {\n    return merge(...this.reducer);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/connector.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { graphql, compose } from 'react-apollo';\nimport update from 'immutability-helper';\nimport { Button } from 'reactstrap';\n\nimport AMOUNT_QUERY from '../graphql/count_get.graphql';\nimport ADD_COUNT_MUTATION from '../graphql/count_add_mutation.graphql';\nimport COUNT_SUBSCRIPTION from '../graphql/count_subscribe.graphql';\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.subscription = null;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.loading) {\n      if (this.subscription) {\n        this.subscription();\n        this.subscription = null;\n      }\n\n      // Subscribe or re-subscribe\n      if (!this.subscription) {\n        this.subscribeToCount();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.subscription) {\n      this.subscription();\n    }\n  }\n\n  handleReduxIncrement(e) {\n    let value;\n    if (e && e.target) {\n      value = e.target.value;\n    } else {\n      value = e;\n    }\n\n    this.props.onReduxIncrement(value);\n  }\n\n  subscribeToCount() {\n    const { subscribeToMore } = this.props;\n    this.subscription = subscribeToMore({\n      document: COUNT_SUBSCRIPTION,\n      variables: {},\n      updateQuery: (prev, {subscriptionData: {data: {countUpdated: { amount }}}}) => {\n        return update(prev, {\n          count: {\n            amount: {\n              $set: amount,\n            },\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    const { loading, count, addCount, reduxCount } = this.props;\n    if (loading) {\n      return (\n        <div className=\"text-center\">\n          Loading...\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"text-center mt-4 mb-4\">\n          Current count, is {count.amount}. This is being stored server-side in the database and using Apollo\n          subscription for real-time updates.\n          <br/>\n          <br/>\n          <Button id=\"graphql-button\" color=\"primary\" onClick={addCount(1)}>\n            Click to increase count\n          </Button>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          Current reduxCount, is {reduxCount}. This is being stored client-side with Redux.\n          <br/>\n          <br/>\n          <Button id=\"redux-button\" color=\"primary\" value=\"1\" onClick={this.handleReduxIncrement.bind(this)}>\n            Click to increase reduxCount\n          </Button>\n        </div>\n      );\n    }\n  }\n}\n\nCounter.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  count: PropTypes.object,\n  updateCountQuery: PropTypes.func,\n  onReduxIncrement: PropTypes.func,\n  addCount: PropTypes.func.isRequired,\n  subscribeToMore: PropTypes.func.isRequired,\n  reduxCount: PropTypes.number.isRequired,\n};\n\nconst CounterWithApollo = compose(\n  graphql(AMOUNT_QUERY, {\n    props({ data: { loading, count, subscribeToMore } }) {\n      return { loading, count, subscribeToMore };\n    }\n  }),\n  graphql(ADD_COUNT_MUTATION, {\n    props: ({ ownProps, mutate }) => ({\n      addCount(amount) {\n        return () => mutate({\n          variables: { amount },\n          updateQueries: {\n            getCount: (prev, { mutationResult }) => {\n              const newAmount = mutationResult.data.addCount.amount;\n              return update(prev, {\n                count: {\n                  amount: {\n                    $set: newAmount,\n                  },\n                },\n              });\n            },\n          },\n          optimisticResponse: {\n            __typename: 'Mutation',\n            addCount: {\n              __typename: 'Count',\n              amount: ownProps.count.amount + 1,\n            },\n          },\n        });\n      },\n    }),\n  })\n)(Counter);\n\nexport default connect(\n  (state) => ({ reduxCount: state.counter.reduxCount }),\n  (dispatch) => ({\n    onReduxIncrement(value)\n    {\n      dispatch({\n        type: 'COUNTER_INCREMENT',\n        value: Number(value)\n      });\n    }\n  }),\n)(CounterWithApollo);\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/counter/containers/counter.jsx","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport Counter from './containers/counter';\nimport reducers from './reducers';\n\nimport Feature from '../connector';\n\nexport default new Feature({\n  route: <Route exact path=\"/\" component={Counter}/>,\n  reducer: { counter: reducers }\n});\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/counter/index.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\nimport { Row, Col, Form, FormGroup, Label, Input, FormFeedback, Button } from 'reactstrap';\n\nconst required = value => value ? undefined : 'Required';\n\nconst renderField = ({ input, label, type, meta: { touched, error } }) => {\n  let color = 'normal';\n  if (touched && error) {\n    color = 'danger';\n  }\n\n  return (\n    <FormGroup color={color}>\n      <Input {...input} placeholder={label} type={type}/>\n      {touched && ((error && <FormFeedback>{error}</FormFeedback>))}\n    </FormGroup>\n  );\n};\n\nrenderField.propTypes = {\n  input: PropTypes.object,\n  label: PropTypes.string,\n  type: PropTypes.string,\n  meta: PropTypes.object\n};\n\nconst CommentForm = (props) => {\n  const { handleSubmit, submitting, initialValues, onSubmit } = props;\n\n  let operation = 'Add';\n  if (initialValues.id !== null) {\n    operation = 'Edit';\n  }\n\n  return (\n    <Form name=\"comment\" onSubmit={handleSubmit(onSubmit)}>\n      <FormGroup>\n        <Row>\n          <Col xs=\"2\"><Label>{operation} comment</Label></Col>\n          <Col xs=\"8\">\n            <Field name=\"content\" component={renderField} type=\"text\" label=\"Content\" validate={required}/>\n          </Col>\n          <Col xs=\"2\">\n            <Button color=\"primary\" type=\"submit\" className=\"float-right\" disabled={submitting}>\n              Submit\n            </Button>\n          </Col>\n        </Row>\n      </FormGroup>\n    </Form>\n  );\n};\n\nCommentForm.propTypes = {\n  handleSubmit: PropTypes.func,\n  initialValues: PropTypes.object,\n  onSubmit: PropTypes.func,\n  submitting: PropTypes.bool\n};\n\nexport default reduxForm({\n  form: 'comment',\n  enableReinitialize: true\n})(CommentForm);\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/post/components/post_comment_form.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\nimport { Form, FormGroup, Label, Input, FormFeedback, Button } from 'reactstrap';\n\nconst required = value => value ? undefined : 'Required';\n\nconst renderField = ({ input, label, type, meta: { touched, error } }) => {\n  let color = 'normal';\n  if (touched && error) {\n    color = 'danger';\n  }\n\n  return (\n    <FormGroup color={color}>\n      <Label>{label}</Label>\n      <div>\n        <Input {...input} placeholder={label} type={type}/>\n        {touched && ((error && <FormFeedback>{error}</FormFeedback>))}\n      </div>\n    </FormGroup>\n  );\n};\n\nrenderField.propTypes = {\n  input: PropTypes.object,\n  label: PropTypes.string,\n  type: PropTypes.string,\n  meta: PropTypes.object\n};\n\nconst PostForm = (props) => {\n  const { handleSubmit, submitting, onSubmit } = props;\n\n  return (\n    <Form name=\"post\" onSubmit={handleSubmit(onSubmit)}>\n      <Field name=\"title\" component={renderField} type=\"text\" label=\"Title\" validate={required}/>\n      <Field name=\"content\" component={renderField} type=\"text\" label=\"Content\" validate={required}/>\n      <Button color=\"primary\" type=\"submit\" disabled={submitting}>\n        Submit\n      </Button>\n    </Form>\n  );\n};\n\nPostForm.propTypes = {\n  handleSubmit: PropTypes.func,\n  onSubmit: PropTypes.func,\n  submitting: PropTypes.bool\n};\n\nexport default reduxForm({\n  form: 'post',\n  enableReinitialize: true\n})(PostForm);\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/post/components/post_form.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, compose } from 'react-apollo';\nimport { Link } from 'react-router-dom';\n\nimport PostForm from '../components/post_form';\nimport POST_ADD from '../graphql/post_add.graphql';\n\nimport { AddPost } from './post_list';\n\nclass PostAdd extends React.Component {\n  onSubmit(values) {\n    const { addPost } = this.props;\n\n    addPost(values.title, values.content);\n  }\n\n  render() {\n    return (\n      <div>\n        <Link to=\"/posts\">Back</Link>\n        <h2>Create Post</h2>\n        <PostForm onSubmit={this.onSubmit.bind(this)}/>\n      </div>\n    );\n  }\n}\n\nPostAdd.propTypes = {\n  addPost: PropTypes.func.isRequired\n};\n\nexport default compose(\n  graphql(POST_ADD, {\n    props: ({ ownProps: { history }, mutate }) => ({\n      addPost: async (title, content) => {\n        await mutate({\n          variables: { input: { title, content } },\n          optimisticResponse: {\n            addPost: {\n              id: -1,\n              title: title,\n              content: content,\n              __typename: 'Post',\n            },\n          },\n          updateQueries: {\n            getPosts: (prev, { mutationResult: { data: { addPost } } }) => {\n              return AddPost(prev, addPost);\n            }\n          }\n        });\n\n        return history.push('/posts');\n      }\n    })\n  })\n)(PostAdd);\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/post/containers/post_add.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { graphql, compose } from 'react-apollo';\nimport update from 'immutability-helper';\nimport { reset } from 'redux-form';\nimport { ListGroup, ListGroupItem } from 'reactstrap';\n\nimport CommentForm from '../components/post_comment_form';\n\nimport COMMENT_ADD from '../graphql/post_comment_add.graphql';\nimport COMMENT_EDIT from '../graphql/post_comment_edit.graphql';\nimport COMMENT_DELETE from '../graphql/post_comment_delete.graphql';\nimport COMMENT_SUBSCRIPTION from '../graphql/post_comment_subscription.graphql';\n\nfunction AddComment(prev, node) {\n  // ignore if duplicate\n  if (node.id !== null && prev.post.comments.some(comment => node.id === comment.id)) {\n    return prev;\n  }\n\n  return update(prev, {\n    post: {\n      comments: {\n        $push: [node],\n      }\n    }\n  });\n}\n\nfunction DeleteComment(prev, id) {\n  const index = prev.post.comments.findIndex(x => x.id === id);\n\n  // ignore if not found\n  if (index < 0) {\n    return prev;\n  }\n\n  return update(prev, {\n    post: {\n      comments: {\n        $splice: [[index, 1]],\n      }\n    }\n  });\n}\n\nclass PostComments extends React.Component {\n  constructor(props) {\n    super(props);\n\n    props.onCommentSelect({ id: null, content: '' });\n\n    this.subscription = null;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // Check if props have changed and, if necessary, stop the subscription\n    if (this.subscription && this.props.postId !== nextProps.postId) {\n      this.subscription = null;\n    }\n\n    // Subscribe or re-subscribe\n    if (!this.subscription) {\n      this.subscribeToCommentList(nextProps.postId);\n    }\n  }\n\n  subscribeToCommentList = postId => {\n    const { subscribeToMore } = this.props;\n\n    this.subscription = subscribeToMore({\n      document: COMMENT_SUBSCRIPTION,\n      variables: { postId },\n      updateQuery: (prev, { subscriptionData: { data: { commentUpdated: { mutation, id, node } } } }) => {\n\n        let newResult = prev;\n\n        if (mutation === 'CREATED') {\n          newResult = AddComment(prev, node);\n        } else if (mutation === 'DELETED') {\n          newResult = DeleteComment(prev, id);\n        }\n\n        return newResult;\n      }\n    });\n  };\n\n  componentWillUnmount() {\n    if (this.subscription) {\n      // unsubscribe\n      this.subscription();\n    }\n  }\n\n  renderComments() {\n    const { comments, onCommentSelect } = this.props;\n\n    return comments.map(({ id, content }) => {\n      return (\n        <ListGroupItem className=\"justify-content-between\" key={id}>\n          {content}\n          <div>\n            <span className=\"badge badge-default badge-pill edit-comment\"\n                  onClick={() => onCommentSelect({ id, content })}>Edit</span>\n            <span className=\"badge badge-default badge-pill delete-comment\" onClick={() => this.onCommentDelete(id)}>Delete</span>\n          </div>\n        </ListGroupItem>\n      );\n    });\n  }\n\n  onCommentDelete(id) {\n    const { comment, deleteComment, onCommentSelect } = this.props;\n\n    if (comment.id === id) {\n      onCommentSelect({ id: null, content: '' });\n    }\n\n    deleteComment(id);\n  }\n\n  onSubmit(values) {\n    const { addComment, editComment, postId, comment, onCommentSelect, onFormSubmitted } = this.props;\n\n    if (comment.id === null) {\n      addComment(values.content, postId);\n    }\n    else {\n      editComment(comment.id, values.content);\n    }\n\n    onCommentSelect({ id: null, content: '' });\n    onFormSubmitted();\n  }\n\n  render() {\n    const { postId, comment } = this.props;\n\n    return (\n      <div>\n        <h3>Comments</h3>\n        <CommentForm postId={postId} onSubmit={this.onSubmit.bind(this)} initialValues={comment}/>\n        <h1/>\n        <ListGroup>{this.renderComments()}</ListGroup>\n      </div>\n    );\n  }\n}\n\nPostComments.propTypes = {\n  postId: PropTypes.string.isRequired,\n  comments: PropTypes.array.isRequired,\n  comment: PropTypes.object.isRequired,\n  addComment: PropTypes.func.isRequired,\n  editComment: PropTypes.func.isRequired,\n  deleteComment: PropTypes.func.isRequired,\n  onCommentSelect: PropTypes.func.isRequired,\n  onFormSubmitted: PropTypes.func.isRequired,\n  subscribeToMore: PropTypes.func.isRequired,\n};\n\nconst PostCommentsWithApollo = compose(\n  graphql(COMMENT_ADD, {\n    props: ({ mutate }) => ({\n      addComment: (content, postId) => mutate({\n        variables: { input: { content, postId } },\n        optimisticResponse: {\n          addComment: {\n            id: -1,\n            content: content,\n            __typename: 'Comment',\n          },\n        },\n        updateQueries: {\n          getPost: (prev, { mutationResult: { data: { addComment } } }) => {\n            return AddComment(prev, addComment);\n          }\n        },\n      })\n    })\n  }),\n  graphql(COMMENT_EDIT, {\n    props: ({ ownProps: { postId }, mutate }) => ({\n      editComment: (id, content) => mutate({\n        variables: { input: { id, postId, content } },\n        optimisticResponse: {\n          __typename: 'Mutation',\n          editComment: {\n            id: id,\n            content: content,\n            __typename: 'Comment',\n          },\n        }\n      }),\n    })\n  }),\n  graphql(COMMENT_DELETE, {\n    props: ({ ownProps: { postId }, mutate }) => ({\n      deleteComment: (id) => mutate({\n        variables: { input: { id, postId } },\n        optimisticResponse: {\n          __typename: 'Mutation',\n          deleteComment: {\n            id: id,\n            __typename: 'Comment',\n          },\n        },\n        updateQueries: {\n          getPost: (prev, { mutationResult: { data: { deleteComment } } }) => {\n            return DeleteComment(prev, deleteComment.id);\n          }\n        }\n      }),\n    })\n  })\n)(PostComments);\n\nexport default connect(\n  (state) => ({ comment: state.post.comment }),\n  (dispatch) => ({\n    onCommentSelect(comment) {\n      dispatch({\n        type: 'COMMENT_SELECT',\n        value: comment\n      });\n    },\n    onFormSubmitted() {\n      dispatch(reset('comment'));\n    }\n  }),\n)(PostCommentsWithApollo);\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/post/containers/post_comments.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, compose } from 'react-apollo';\nimport { Link } from 'react-router-dom';\n\nimport PostForm from '../components/post_form';\nimport PostComments from './post_comments';\nimport POST_QUERY from '../graphql/post_get.graphql';\nimport POST_EDIT from '../graphql/post_edit.graphql';\nimport POST_SUBSCRIPTION from '../graphql/post_subscription.graphql';\n\nclass PostEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.subscription = null;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.loading) {\n      // Check if props have changed and, if necessary, stop the subscription\n      if (this.subscription && this.props.post.id !== nextProps.post.id) {\n        this.subscription();\n        this.subscription = null;\n      }\n\n      // Subscribe or re-subscribe\n      if (!this.subscription) {\n        this.subscribeToPostEdit(nextProps.post.id);\n      }\n    }\n  }\n\n  subscribeToPostEdit = postId => {\n    const { subscribeToMore } = this.props;\n\n    this.subscription = subscribeToMore({\n      document: POST_SUBSCRIPTION,\n      variables: { id: postId }\n    });\n  };\n\n  componentWillUnmount() {\n    if (this.subscription) {\n      // unsubscribe\n      this.subscription();\n    }\n  }\n\n  onSubmit(values) {\n    const { post, editPost } = this.props;\n\n    editPost(post.id, values.title, values.content);\n  }\n\n  render() {\n    const { loading, post, match, subscribeToMore } = this.props;\n\n    if (loading) {\n      return (\n        <div>{ /* loading... */ }</div>\n      );\n    } else {\n      return (\n        <div>\n          <Link id=\"back-button\" to=\"/posts\">Back</Link>\n          <h2>Edit Post</h2>\n          <PostForm onSubmit={this.onSubmit.bind(this)} initialValues={post}/>\n          <br/>\n          <PostComments postId={match.params.id} comments={post.comments} subscribeToMore={subscribeToMore}/>\n        </div>\n      );\n    }\n  }\n}\n\nPostEdit.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  post: PropTypes.object,\n  editPost: PropTypes.func.isRequired,\n  match: PropTypes.object.isRequired,\n  subscribeToMore: PropTypes.func.isRequired,\n};\n\nexport default compose(\n  graphql(POST_QUERY, {\n    options: (props) => {\n      return {\n        variables: { id: props.match.params.id }\n      };\n    },\n    props({ data: { loading, post, subscribeToMore } }) {\n      return { loading, post, subscribeToMore };\n    }\n  }),\n  graphql(POST_EDIT, {\n    props: ({ ownProps: { history }, mutate }) => ({\n      editPost: async (id, title, content) => {\n        await mutate({\n          variables: { input: { id, title, content } }\n        });\n\n        return history.push('/posts');\n      }\n    })\n  })\n)(PostEdit);\n\n\n// WEBPACK FOOTER //\n// src/client/modules/post/containers/post_edit.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, compose } from 'react-apollo';\nimport update from 'immutability-helper';\nimport { Link } from 'react-router-dom';\nimport { ListGroup, ListGroupItem, Button } from 'reactstrap';\n\nimport POSTS_QUERY from '../graphql/posts_get.graphql';\nimport POSTS_SUBSCRIPTION from '../graphql/posts_subscription.graphql';\nimport POST_DELETE from '../graphql/post_delete.graphql';\n\nexport function AddPost(prev, node) {\n  // ignore if duplicate\n  if (node.id !== null && prev.postsQuery.edges.some(post => node.id === post.cursor)) {\n    return prev;\n  }\n\n  const edge = {\n    cursor: node.id,\n    node: node,\n    __typename: 'PostEdges'\n  };\n\n  return update(prev, {\n    postsQuery: {\n      totalCount: {\n        $set: prev.postsQuery.totalCount + 1\n      },\n      edges: {\n        $unshift: [edge],\n      }\n    }\n  });\n}\n\nfunction DeletePost(prev, id) {\n  const index = prev.postsQuery.edges.findIndex(x => x.node.id === id);\n\n  // ignore if not found\n  if (index < 0) {\n    return prev;\n  }\n\n  return update(prev, {\n    postsQuery: {\n      totalCount: {\n        $set: prev.postsQuery.totalCount - 1\n      },\n      edges: {\n        $splice: [[index, 1]],\n      }\n    }\n  });\n}\n\nclass PostList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.subscription = null;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.loading) {\n      const endCursor = this.props.postsQuery ? this.props.postsQuery.pageInfo.endCursor : 0;\n      const nextEndCursor = nextProps.postsQuery.pageInfo.endCursor;\n\n      // Check if props have changed and, if necessary, stop the subscription\n      if (this.subscription && endCursor !== nextEndCursor) {\n        this.subscription();\n        this.subscription = null;\n      }\n\n      // Subscribe or re-subscribe\n      if (!this.subscription) {\n        this.subscribeToPostList(nextEndCursor);\n      }\n    }\n  }\n\n  subscribeToPostList = endCursor => {\n    const { subscribeToMore } = this.props;\n\n    this.subscription = subscribeToMore({\n      document: POSTS_SUBSCRIPTION,\n      variables: { endCursor },\n      updateQuery: (prev, { subscriptionData: { data: { postsUpdated: { mutation, node } } } }) => {\n        let newResult = prev;\n\n        if (mutation === 'CREATED') {\n          newResult = AddPost(prev, node);\n        } else if (mutation === 'DELETED') {\n          newResult = DeletePost(prev, node.id);\n        }\n\n        return newResult;\n      }\n    });\n  };\n\n  componentWillUnmount() {\n    if (this.subscription) {\n      // unsubscribe\n      this.subscription();\n    }\n  }\n\n  renderPosts() {\n    const { postsQuery, deletePost } = this.props;\n\n    return postsQuery.edges.map(({ node: { id, title } }) => {\n      return (\n        <ListGroupItem className=\"justify-content-between\" key={id}>\n          <span><Link className=\"post-link\" to={`/post/${id}`}>{title}</Link></span>\n          <span className=\"badge badge-default badge-pill delete-button\" onClick={deletePost(id)}>Delete</span>\n        </ListGroupItem>\n      );\n    });\n  }\n\n  renderLoadMore() {\n    const { postsQuery, loadMoreRows } = this.props;\n\n    if (postsQuery.pageInfo.hasNextPage) {\n      return (\n        <Button id=\"load-more\" color=\"primary\" onClick={loadMoreRows}>\n          Load more ...\n        </Button>\n      );\n    }\n  }\n\n  render() {\n    const { loading, postsQuery } = this.props;\n\n    if (loading && !postsQuery) {\n      return (\n        <div>{ /* loading... */ }</div>\n      );\n    } else {\n      return (\n        <div>\n          <h2>Posts</h2>\n          <Link to=\"/post/add\">\n            <Button color=\"primary\">Add</Button>\n          </Link>\n          <h1/>\n          <ListGroup>\n            {this.renderPosts()}\n          </ListGroup>\n          <div>\n            <small>({postsQuery.edges.length} / {postsQuery.totalCount})</small>\n          </div>\n          {this.renderLoadMore()}\n        </div>\n      );\n    }\n  }\n}\n\nPostList.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  postsQuery: PropTypes.object,\n  deletePost: PropTypes.func.isRequired,\n  loadMoreRows: PropTypes.func.isRequired,\n  subscribeToMore: PropTypes.func.isRequired,\n};\n\nexport default compose(\n  graphql(POSTS_QUERY, {\n    options: () => {\n      return {\n        variables: { limit: 10, after: 0 },\n      };\n    },\n    props: ({ data }) => {\n      const { loading, postsQuery, fetchMore, subscribeToMore } = data;\n      const loadMoreRows = () => {\n        return fetchMore({\n          variables: {\n            after: postsQuery.pageInfo.endCursor,\n          },\n          updateQuery: (previousResult, { fetchMoreResult }) => {\n            const totalCount = fetchMoreResult.postsQuery.totalCount;\n            const newEdges = fetchMoreResult.postsQuery.edges;\n            const pageInfo = fetchMoreResult.postsQuery.pageInfo;\n\n            return {\n              // By returning `cursor` here, we update the `fetchMore` function\n              // to the new cursor.\n              postsQuery: {\n                totalCount,\n                edges: [...previousResult.postsQuery.edges, ...newEdges],\n                pageInfo,\n                __typename: \"PostsQuery\"\n              }\n            };\n          }\n        });\n      };\n\n      return { loading, postsQuery, subscribeToMore, loadMoreRows };\n    }\n  }),\n  graphql(POST_DELETE, {\n    props: ({ mutate }) => ({\n      deletePost(id) {\n        return () => mutate({\n          variables: { id },\n          optimisticResponse: {\n            __typename: 'Mutation',\n            deletePost: {\n              id: id,\n              __typename: 'Post',\n            },\n          },\n          updateQueries: {\n            getPosts: (prev, { mutationResult: { data: { deletePost } } }) => {\n              return DeletePost(prev, deletePost.id);\n            }\n          }\n        });\n      },\n    })\n  })\n)(PostList);\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/post/containers/post_list.jsx","import React from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { NavItem } from 'reactstrap';\n\nimport PostList from './containers/post_list';\nimport PostAdd from './containers/post_add';\nimport PostEdit from './containers/post_edit';\n\nimport reducers from './reducers';\n\nimport Feature from '../connector';\n\nexport default new Feature({\n  route: [\n    <Route exact path=\"/posts\" component={PostList}/>,\n    <Route exact path=\"/post/add\" component={PostAdd}/>,\n    <Route exact path=\"/post/:id\" component={PostEdit}/>\n  ],\n  navItem:\n    <NavItem>\n      <Link to=\"/posts\" className=\"nav-link\">Posts</Link>\n    </NavItem>,\n  reducer: { post: reducers }\n});\n\n\n// WEBPACK FOOTER //\n// src/client/modules/post/index.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button } from 'reactstrap';\n\nimport axios from 'axios';\n\nexport default class Weather extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weatherData: {\n        city: {\n          name: '',\n          country: ''\n        },\n        list: []\n      },\n      fiveDayForecast: []\n    };\n\n    this.subscription = null;\n  }\n\n  componentWillMount() {\n    this.getLocation();\n  }\n\n  getLocation() {\n    if (navigator) {\n      const geolocation = navigator.geolocation;\n\n      new Promise((resolve, reject) => {\n        geolocation.getCurrentPosition((position) => {\n          this.getWeatherForecast(position.coords.latitude, position.coords.longitude);\n        }, () => {\n          reject (new Error('Permission denied'));\n        });\n      });\n    }\n  }\n\n  getWeatherForecast(lat, long) {\n    const API_KEY = `46ddd9c3c6a545d0d62e60754768e38d`;\n    const WEATHER_URL = `http://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${long}&appid=${API_KEY}&units=imperial`;\n\n    return axios.get(WEATHER_URL).then(\n      (res) => {\n        if (res.data.cod !== '200' && res.data.message){\n          throw new Error(res.data.message);\n        } else {\n          let fiveDayForecast = [];\n          let dayArray = [];\n          res.data.list.map((timeData, index) => {\n            dayArray.push(timeData);\n\n            if ((index + 1) % 8 === 0) {\n              fiveDayForecast.push(dayArray);\n              dayArray = new Array;\n            }\n          });\n          this.setState({\n            weatherData: res.data,\n            fiveDayForecast: fiveDayForecast\n          });\n          return res.data;\n        }\n      },\n      (res) => {\n        throw new Error(res.data.message);\n      }\n    );\n  }\n\n  render() {\n    const { loading } = this.props;\n    console.log(this.state.fiveDayForecast);\n    return (\n      <div className=\"text-center mt-4 mb-4\">\n        { this.state.weatherData.city.name }, { this.state.weatherData.city.country }\n        {\n          this.state.fiveDayForecast.map(function(day) {\n            return (\n              <ul className=\"Day\">\n                {\n                  day.map(function(hour) {\n                    return (\n                      <li key={hour.dt}>\n                        Time { hour.dt_txt }\n                        { hour.main.temp }\n                        Hi { hour.main.temp_max }\n                        Low { hour.main.temp_min }\n                      </li>\n                    )\n                  })\n                }\n              </ul>\n            )\n          })\n       }\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/weather/containers/weather.jsx","import React from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { NavItem } from 'reactstrap';\n\nimport Weather from './containers/weather';\nimport reducers from './reducers';\n\nimport Feature from '../connector';\n\nexport default new Feature({\n  route: <Route exact path=\"/weather\" component={Weather}/>,\n  navItem:\n    <NavItem>\n      <Link to=\"/weather\" className=\"nav-link\">Weather</Link>\n    </NavItem>,\n  reducer: { weather: reducers }\n});\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/weather/index.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport serialize from 'serialize-javascript';\nimport styles from 'client/styles/styles.scss';\n\nconst Html = ({ content, state, assetMap, css }) => {\n  return (\n    <html lang=\"en\">\n    <head>\n      <meta charSet=\"utf-8\"/>\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n      <title>Apollo Fullstack Starter Kit</title>\n\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={`/${assetMap[\"apple-touch-icon.png\"]}`}/>\n      <link rel=\"icon\" type=\"image/png\" href={`/${assetMap[\"favicon-32x32.png\"]}`} sizes=\"32x32\"/>\n      <link rel=\"icon\" type=\"image/png\" href={`/${assetMap[\"favicon-16x16.png\"]}`} sizes=\"16x16\"/>\n      <link rel=\"manifest\" href={`/${assetMap[\"manifest.json\"]}`}/>\n      <link rel=\"mask-icon\" href={`/${assetMap[\"safari-pinned-tab.svg\"]}`} color=\"#5bbad5\"/>\n      <link rel=\"shortcut icon\" href={`/${assetMap[\"favicon.ico\"]}`}/>\n      <meta name=\"msapplication-config\" content={`/${assetMap[\"browserconfig.xml\"]}`}/>\n      <meta name=\"theme-color\" content=\"#ffffff\"/>\n      {!__DEV__ && <link rel=\"stylesheet\" type=\"text/css\" href={`/${assetMap['bundle.css']}`}/>}\n      {!!__DEV__ &&\n      <style dangerouslySetInnerHTML={{\n        __html: styles._getCss()\n      }}/>\n      }\n      {!!css && css}\n    </head>\n    <body>\n    <div id=\"content\" dangerouslySetInnerHTML={{ __html: content || \"\" }}/>\n    <script\n      dangerouslySetInnerHTML={{ __html: `window.__APOLLO_STATE__=${serialize(state, { isJSON: true })};` }}\n      charSet=\"UTF-8\"\n    />\n    {assetMap[\"vendor.js\"] && <script src={`/${assetMap[\"vendor.js\"]}`} charSet=\"utf-8\"/>}\n    <script src={`/${assetMap['bundle.js']}`} charSet=\"utf-8\"/>\n    </body>\n    </html>\n  );\n};\n\nHtml.propTypes = {\n  content: PropTypes.string,\n  state: PropTypes.object.isRequired,\n  assetMap: PropTypes.object.isRequired,\n  css: PropTypes.array\n};\n\nexport default Html;\n\n\n\n// WEBPACK FOOTER //\n// src/server/middleware/html.jsx","import React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport { createBatchingNetworkInterface } from 'apollo-client';\nimport { ApolloProvider, getDataFromTree } from 'react-apollo';\nimport { StaticRouter } from 'react-router';\nimport { ServerStyleSheet } from 'styled-components';\nimport { addApolloLogging } from 'apollo-logger';\nimport { addPersistedQueries } from 'persistgraphql';\nimport fs from 'fs';\nimport path from 'path';\n\nimport createApolloClient from '../../common/apollo_client';\nimport createReduxStore from '../../common/redux_store';\nimport Html from './html';\nimport routes from '../../client/app/routes';\nimport log from '../../common/log';\nimport { app as settings } from '../../../package.json';\n\nconst port = process.env.PORT || settings.apiPort;\n\nconst apiUrl = `http://localhost:${port}/graphql`;\n\nlet assetMap;\n\nasync function renderServerSide(req, res, queryMap) {\n  let networkInterface = createBatchingNetworkInterface({\n    uri: apiUrl,\n    opts: {\n      credentials: \"same-origin\",\n      headers: req.headers,\n    },\n    batchInterval: 20,\n  });\n\n  if (settings.persistGraphQL) {\n    networkInterface = addPersistedQueries(networkInterface, queryMap);\n  }\n\n  if (settings.apolloLogging) {\n    networkInterface = addApolloLogging(networkInterface);\n  }\n\n  const client = createApolloClient(networkInterface);\n\n  let initialState = {};\n  const store = createReduxStore(initialState, client);\n\n  const context = {};\n  const component = (\n    <ApolloProvider store={store} client={client}>\n      <StaticRouter\n        location={req.url}\n        context={context}\n      >\n        {routes}\n      </StaticRouter>\n    </ApolloProvider>\n  );\n\n  await getDataFromTree(component);\n\n  res.status(200);\n\n  const sheet = new ServerStyleSheet();\n  const html = ReactDOMServer.renderToString(sheet.collectStyles(component));\n  const css = sheet.getStyleElement();\n\n  if (context.url) {\n    res.writeHead(301, { Location: context.url });\n    res.end();\n  } else {\n    if (__DEV__ || !assetMap) {\n      assetMap = JSON.parse(fs.readFileSync(path.join(settings.frontendBuildDir, 'assets.json')));\n    }\n\n    const apolloState = Object.assign({}, client.store.getState());\n\n    // Temporary workaround for bug in AC@0.5.0: https://github.com/apollostack/apollo-client/issues/845\n    delete apolloState.apollo.queries;\n    delete apolloState.apollo.mutations;\n\n    const page = <Html content={html} state={apolloState} assetMap={assetMap} css={css}/>;\n    res.send(`<!doctype html>\\n${ReactDOMServer.renderToStaticMarkup(page)}`);\n    res.end();\n  }\n}\n\nasync function renderClientSide(req, res) {\n  if (__DEV__ || !assetMap) {\n    assetMap = JSON.parse(fs.readFileSync(path.join(settings.frontendBuildDir, 'assets.json')));\n  }\n  const page = <Html state={({})} assetMap={assetMap}/>;\n  res.send(`<!doctype html>\\n${ReactDOMServer.renderToStaticMarkup(page)}`);\n  res.end();\n}\n\nexport default queryMap => async (req, res, next) => {\n  try {\n    if (req.url.indexOf('.') < 0) {\n      if (__SSR__) {\n        return renderServerSide(req, res, queryMap);\n      } else {\n        return renderClientSide(req, res);\n      }\n    } else {\n      return next();\n    }\n  } catch (e) { log.error('RENDERING ERROR:', e); }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/server/middleware/website.jsx","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 0\n// module chunks = 0"],"mappings":";;A;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AALA;AAUA;AACA;AACA;AACA;AADA;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AALA;AADA;AADA;AADA;AACA;AAiBA;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AACA;;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AAEA;AAHA;AAIA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AADA;AADA;AAOA;AAXA;AAaA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAXA;AAYA;AAZA;AAaA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAfA;AAoBA;AACA;;;;AAtFA;AACA;AAwFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAHA;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AADA;AADA;AAOA;AAVA;AAYA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAdA;AAAA;AAsBA;AAxBA;AAAA;AADA;AACA;AA6BA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AAPA;AAAA;;;;;;;;ACpJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AALA;AADA;AADA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AACA;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAMA;;;;AAfA;AACA;AAiBA;AACA;AADA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAQA;AACA;AAAA;AACA;AAAA;AACA;AAHA;AAVA;AACA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AADA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AADA;AAOA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AACA;AArCA;AACA;AACA;AALA;AAMA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAuBA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAFA;AASA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;;;;AArGA;AACA;AAuGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AAWA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AACA;AAAA;AACA;AAAA;AACA;AAHA;AATA;AAAA;AADA;AAAA;AADA;AAoBA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAFA;AAAA;AADA;AAAA;AADA;AAgBA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AAAA;AACA;AAAA;AACA;AAHA;AATA;AAAA;AADA;AAAA;AADA;AACA;AAoBA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AATA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AAqBA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AA1BA;AAHA;AAIA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAWA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AALA;AAQA;AACA;;;;AA9DA;AACA;AAgEA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AAEA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AARA;AAWA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AACA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AADA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AADA;AAUA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AAxCA;AAHA;AAIA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAsBA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAZA;AAeA;AACA;;;;AAtGA;AACA;AAwGA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AAEA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAHA;AAUA;AAnBA;AAqBA;AACA;AACA;AACA;AAjCA;AAoCA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AAAA;AACA;AAAA;AACA;AAHA;AATA;AAAA;AAeA;AAjBA;AAAA;AADA;;;;;;;;AC5MA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAVA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AALA;AAOA;AARA;AACA;AAUA;AAbA;AAcA;AACA;;;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAEA;AACA;AAEA;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAGA;AAHA;AAIA;AAJA;AAOA;AAXA;AAeA;AApBA;AAwBA;;;;AA/FA;AACA;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AANA;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AADA;AAIA;AAnBA;AAqBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AAtBA;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAJA;AADA;AAzBA;AAAA;AACA;AADA;AACA;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AA7DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;;;;;;AA+DA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;;;;;AAvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAyEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAWA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;;;;;;;AChGA;;;;;;;A","sourceRoot":""}