{"version":3,"file":"0.01bf9f95415f3b15dcb1.hot-update.js","sources":["../.././~/persisted_queries.json","../../src/client/modules/weather/containers/weather.jsx"],"sourcesContent":["module.exports = {\n\t\"mutation addComment($input: AddCommentInput!) {\\n  addComment(input: $input) {\\n    ...CommentInfo\\n    __typename\\n  }\\n}\\n\\nfragment CommentInfo on Comment {\\n  id\\n  content\\n  __typename\\n}\\n\": 1,\n\t\"mutation addCount($amount: Int!) {\\n  addCount(amount: $amount) {\\n    amount\\n    __typename\\n  }\\n}\\n\": 2,\n\t\"mutation addPost($input: AddPostInput!) {\\n  addPost(input: $input) {\\n    ...PostInfo\\n    __typename\\n  }\\n}\\n\\nfragment PostInfo on Post {\\n  id\\n  title\\n  content\\n  __typename\\n}\\n\": 3,\n\t\"mutation deleteComment($input: DeleteCommentInput!) {\\n  deleteComment(input: $input) {\\n    id\\n    __typename\\n  }\\n}\\n\": 4,\n\t\"mutation deletePost($id: ID!) {\\n  deletePost(id: $id) {\\n    id\\n    __typename\\n  }\\n}\\n\": 5,\n\t\"mutation editComment($input: EditCommentInput!) {\\n  editComment(input: $input) {\\n    ...CommentInfo\\n    __typename\\n  }\\n}\\n\\nfragment CommentInfo on Comment {\\n  id\\n  content\\n  __typename\\n}\\n\": 6,\n\t\"mutation editPost($input: EditPostInput!) {\\n  editPost(input: $input) {\\n    ...PostInfo\\n    __typename\\n  }\\n}\\n\\nfragment PostInfo on Post {\\n  id\\n  title\\n  content\\n  __typename\\n}\\n\": 7,\n\t\"query getCount {\\n  count {\\n    amount\\n    __typename\\n  }\\n}\\n\": 8,\n\t\"query getPost($id: ID!) {\\n  post(id: $id) {\\n    ...PostInfo\\n    comments {\\n      ...CommentInfo\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\\nfragment PostInfo on Post {\\n  id\\n  title\\n  content\\n  __typename\\n}\\n\\nfragment CommentInfo on Comment {\\n  id\\n  content\\n  __typename\\n}\\n\": 9,\n\t\"query getPosts($limit: Int!, $after: ID) {\\n  postsQuery(limit: $limit, after: $after) {\\n    totalCount\\n    edges {\\n      cursor\\n      node {\\n        ...PostInfo\\n        __typename\\n      }\\n      __typename\\n    }\\n    pageInfo {\\n      endCursor\\n      hasNextPage\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\\nfragment PostInfo on Post {\\n  id\\n  title\\n  content\\n  __typename\\n}\\n\": 10,\n\t\"subscription onCommentUpdated($postId: ID!) {\\n  commentUpdated(postId: $postId) {\\n    mutation\\n    id\\n    postId\\n    node {\\n      ...CommentInfo\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\\nfragment CommentInfo on Comment {\\n  id\\n  content\\n  __typename\\n}\\n\": 11,\n\t\"subscription onCountUpdated {\\n  countUpdated {\\n    amount\\n    __typename\\n  }\\n}\\n\": 12,\n\t\"subscription onPostUpdated($id: ID!) {\\n  postUpdated(id: $id) {\\n    ...PostInfo\\n    __typename\\n  }\\n}\\n\\nfragment PostInfo on Post {\\n  id\\n  title\\n  content\\n  __typename\\n}\\n\": 13\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/persisted_queries.json\n// module id = ./node_modules/persisted_queries.json\n// module chunks = 0","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { graphql, compose } from 'react-apollo';\nimport update from 'immutability-helper';\nimport { Button } from 'reactstrap';\n\nimport axios from 'axios';\n\n//import WEATHER_QUERY from '../graphql/weather_get.graphql';\n\nclass Weather extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weatherData: {\n        city: {\n          name: '',\n          country: ''\n        },\n        list: []\n      }\n    };\n\n    this.subscription = null;\n  }\n\n  componentWillMount() {\n    this.getLocation();\n  }\n\n  componentWillUnmount() {\n    if (this.subscription) {\n      this.subscription();\n    }\n  }\n\n  getLocation() {\n    const geolocation = navigator.geolocation;\n    console.log(geolocation);\n\n    if (geolocation) {\n      new Promise((resolve, reject) => {\n        geolocation.getCurrentPosition((position) => {\n          this.getWeatherForecast(position.coords.latitude, position.coords.longitude);\n        }, () => {\n          reject (new Error('Permission denied'));\n        });\n      });\n    }\n  }\n\n  getWeatherForecast(lat, long) {\n    const API_KEY = `46ddd9c3c6a545d0d62e60754768e38d`;\n    const WEATHER_URL = `http://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${long}&appid=${API_KEY}`;\n\n    return axios.get(WEATHER_URL).then(\n      (res) => {\n        if (res.data.cod !== '200' && res.data.message){\n          throw new Error(res.data.message);\n        } else {\n          this.setState({\n            weatherData: res.data\n          });\n          return res.data;\n        }\n      },\n      (res) => {\n        throw new Error(res.data.message);\n      }\n    );\n  }\n\n  render() {\n    const { loading } = this.props;\n    console.log(this.state.weatherData);\n    return (\n      <div className=\"text-center mt-4 mb-4\">\n        { this.state.weatherData.city.name }, { this.state.weatherData.city.country }\n      </div>\n    );\n  }\n}\n\nWeather.propTypes = {};\n\nconst WeatherWithApollo = compose()(Weather);\n\nexport default connect(\n  (state) => ({  }),\n  (dispatch) => ({  }),\n)(WeatherWithApollo);\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/weather/containers/weather.jsx"],"mappings":";;A;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AALA;AADA;AACA;AASA;AAZA;AAaA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAEA;AACA;AAEA;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AADA;AAIA;;;;AAtEA;AACA;AAwEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;;;;A","sourceRoot":""}