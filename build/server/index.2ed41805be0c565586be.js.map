{"version":3,"file":"0.9dbad203122d481b7a19.hot-update.js","sources":["../../src/client/modules/weather/containers/weather.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button } from 'reactstrap';\n\nimport momentjs from 'moment';\nimport Moment from 'react-moment';\n\nimport axios from 'axios';\n\nexport default class Weather extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentData: {\n        city: {\n          name: '',\n          country: ''\n        },\n        main: {\n          temp: '',\n          temp_max: '',\n          temp_min: ''\n        },\n        weather: [\n          {\n            description: '',\n            main: ''\n          }\n        ]\n      },\n      weatherData: {\n        city: {\n          name: '',\n          country: ''\n        },\n        list: []\n      },\n      forecastData: []\n    };\n\n    this.subscription = null;\n  }\n\n  componentWillMount() {\n    this.getLocation();\n  }\n\n  getLocation() {\n    if (navigator) {\n      const geolocation = navigator.geolocation;\n\n      new Promise((resolve, reject) => {\n        geolocation.getCurrentPosition((position) => {\n          this.getWeatherForecast(position.coords.latitude, position.coords.longitude);\n        }, () => {\n          console.log('sorry bud, didnt work');\n          reject (new Error('Permission denied'));\n        });\n      });\n    } else {\n      console.log(`sorry but this didnt work`);\n    }\n  }\n\n  getWeatherForecast(lat, long) {\n    const API_KEY = `46ddd9c3c6a545d0d62e60754768e38d`;\n    const WEATHER_CURRENT_URL = `http://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${API_KEY}&units=imperial`;\n    //const WEATHER_FORECAST_URL = `http://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${long}&appid=${API_KEY}&units=imperial`;\n    const WEATHER_FORECAST_URL = `http://api.openweathermap.org/data/2.5/forecast/daily?lat=${lat}&lon=${long}&appid=${API_KEY}&units=imperial&cnt=7`;\n\n    axios.get(WEATHER_CURRENT_URL).then(\n      (res) => {\n        if (res.data.cod !== '200' && res.data.message){\n          throw new Error(res.data.message);\n        } else {\n          this.setState({\n            currentData: res.data,\n          });\n          return res.data;\n        }\n      },\n      (res) => {\n        throw new Error(res.data.message);\n      }\n    );\n\n    /*\n    axios.get(WEATHER_FORECAST_URL).then(\n      (res) => {\n        if (res.data.cod !== '200' && res.data.message){\n          throw new Error(res.data.message);\n        } else {\n          let fiveDayForecast = [];\n          let dayArray = [];\n          res.data.list.map((timeData, index) => {\n            if ((index + 1) % 8 === 0) {\n              fiveDayForecast.push(dayArray);\n              dayArray = new Array;\n            } else {\n              dayArray.push(timeData);\n            }\n          });\n          this.setState({\n            weatherData: res.data,\n            fiveDayForecast: fiveDayForecast\n          });\n          return res.data;\n        }\n      },\n      (res) => {\n        throw new Error(res.data.message);\n      }\n    );\n    */\n\n    axios.get(WEATHER_FORECAST_URL).then(\n      (res) => {\n        if (res.data.cod !== '200' && res.data.message){\n          throw new Error(res.data.message);\n        } else {\n          let forecastData = [];\n          console.log(res.data);\n          res.data.list.map((timeData, index) => {\n            forecastData.push(timeData);\n          });\n          this.setState({\n            weatherData: res.data,\n            forecastData: forecastData\n          });\n          return res.data;\n        }\n      },\n      (res) => {\n        throw new Error(res.data.message);\n      }\n    );\n  }\n\n  render() {\n    const widthStyle = {\n      width: `${100 / this.state.forecastData.length}%`\n    };\n\n    console.log(this.state.currentData);\n    console.log(this.state.weatherData);\n    console.log(this.state.forecastData);\n    return (\n      <div className=\"weather text-center mt-4 mb-4\">\n        <h1>{ this.state.currentData.name }</h1>\n\n        <h2>Today's Forecast</h2>\n        <ul className=\"current-day list-unstyled\">\n          <li className=\"card\">\n            <label className=\"title\">{ momentjs.unix(this.state.currentData.dt).format('ddd') }</label>\n            <label>\n              <span>{ this.state.currentData.main.temp }</span>\n            </label>\n            <label>\n              <span>Hi</span>\n              <span>{ this.state.currentData.main.temp_max }</span>\n            </label>\n            <label>\n              <span>Low</span>\n              <span>{ this.state.currentData.main.temp_min }</span>\n            </label>\n          </li>\n        </ul>\n\n        <h2>Upcoming Forecast</h2>\n        <div className=\"forecast\">\n          <ul className=\"day list-unstyled\">\n            {\n              this.state.forecastData.map(function(day) {\n                let dayString = momentjs.unix(day.dt).format('ddd');\n                return (\n                  <li key={day.dt} className=\"card\" style={widthStyle}>\n                    <label className=\"title\">{ dayString }</label>\n                    <label>\n                      <span>{ day.temp.day }</span>\n                    </label>\n                    <label>\n                      <span>Hi</span>\n                      <span>{ day.temp.max }</span>\n                    </label>\n                    <label>\n                      <span>Low</span>\n                      <span>{ day.temp.min }</span>\n                    </label>\n                  </li>\n                )\n              })\n            }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/weather/containers/weather.jsx"],"mappings":";;A;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AAFA;AAXA;AAiBA;AACA;AACA;AACA;AAFA;AAIA;AALA;AAOA;AAzBA;AACA;AA2BA;AA9BA;AA+BA;AACA;;;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAEA;AACA;AAEA;;;AAEA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AATA;AADA;AAiBA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AATA;AAeA;AApBA;AADA;AAtBA;AAiDA;;;;AA3LA;AACA;;;;;A","sourceRoot":""}