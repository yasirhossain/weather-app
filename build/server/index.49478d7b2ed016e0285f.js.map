{"version":3,"file":"0.c0504e65fc4025d9367f.hot-update.js","sources":["../../src/client/modules/weather/containers/weather.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button } from 'reactstrap';\n\nimport axios from 'axios';\n\nexport default class Weather extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weatherData: {\n        city: {\n          name: '',\n          country: ''\n        },\n        list: []\n      },\n      weatherTimeData: []\n    };\n\n    this.subscription = null;\n  }\n\n  componentWillMount() {\n    this.getLocation();\n  }\n\n  getLocation() {\n    if (navigator) {\n      const geolocation = navigator.geolocation;\n\n      new Promise((resolve, reject) => {\n        geolocation.getCurrentPosition((position) => {\n          this.getWeatherForecast(position.coords.latitude, position.coords.longitude);\n        }, () => {\n          reject (new Error('Permission denied'));\n        });\n      });\n    }\n  }\n\n  getWeatherForecast(lat, long) {\n    const API_KEY = `46ddd9c3c6a545d0d62e60754768e38d`;\n    const WEATHER_URL = `http://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${long}&appid=${API_KEY}`;\n\n    return axios.get(WEATHER_URL).then(\n      (res) => {\n        if (res.data.cod !== '200' && res.data.message){\n          throw new Error(res.data.message);\n        } else {\n          let weatherData = [];\n          let dayArray = [];\n          res.data.list.map((timeData, index) => {\n            dayArray.push(timeData);\n\n            if ((index + 1) % 8 === 0) {\n              console.log('is divisible');\n              weatherData.push(dayArray);\n              dayArray = new Array;\n            }\n          });\n          console.log(weatherData);\n          this.setState({\n            weatherData: res.data\n          });\n          return res.data;\n        }\n      },\n      (res) => {\n        throw new Error(res.data.message);\n      }\n    );\n  }\n\n  render() {\n    const { loading } = this.props;\n    console.log(this.state.weatherData);\n    return (\n      <div className=\"text-center mt-4 mb-4\">\n        { this.state.weatherData.city.name }, { this.state.weatherData.city.country }\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/weather/containers/weather.jsx"],"mappings":";;A;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AALA;AAOA;AARA;AACA;AAUA;AAbA;AAcA;AACA;;;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAEA;AACA;AAEA;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AADA;AAIA;;;;AA5EA;AACA;;;;;A","sourceRoot":""}